= >>> %menu%
上のファイル名↑にカーソルを合わせて<CR>で、ファイル編集可能です。

-------------------------------------
%"q"[終了] %"i"[プレビュー] %","[menu更新(,)] %"r,"[Menu最新(r,)] %"I"[Help(H)]
-------------------------------------
%"."[新規(c)] %"u"[QMem(u)] %" "[日記(<Space>)]
%"m"[MRU(m)]  %"o"[最近(l)] %"O"[最近(L)]
%"a"[一覧キャッシュ表示(a)] %"ra"[全エントリ一覧(ra)] %"A"[日記一覧(A)]
%"s"[固定(s)] %"S"[正規(g)] %"R"[ファイル一覧(rA)] %"rr"[ランダム(rr)]
%"<Tab>"[予定(y)] %"t"[todo(t)] %"ry"[予定最新(ry)]  %"rt"[Todo最新(rt)]
リビルド (%"rk"[キーワード(rk)] %"rR"[ランダム(rR)]) %"rN"[リネーム(rN)]
-------------------------------------
・デフォルトキーマップは let QFixHowm_MenuKey = 0 で無効化できます。
・ボタンはカーソルを合わせて<CR>かダブルクリック、ショートカットキーで実行します。
  howm://, sche:// で始まっている行で<CR>を押すと対応するファイルを開く事ができます。
  また32<CR> なら32行目に移動してから<CR>を押したのと同じ動作を行います。
・menu更新とmenu最新の差はキャッシュを無効化して強制再検索するかどうかです。

[予定・TODO]
%reminder

[最近のメモ]
%recent

[ランダムセレクト]
%random

* menuのオプション指定
  "メニュー画面のプレビュー("i"でOn/Off)
  let QFixHowm_MenuPreview = 1
  "メニュー画面で表示する最近のメモの数
  let QFixHowm_MenuRecent = 5

メニュー画面ファイルは何処にあってもリンク作成の対象になるので、Wikiスタイルリンクなどを定義しておくと便利かもしれません。
その他は普通のhowmファイルと同様の機能が使用可能です。

